version: '3'
services:
  zookeeper:
    image: quay.io/debezium/zookeeper:1.9
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
      - 7071:7071
    environment:
      CLIENT_PORT: 2181
      TICK_TIME: 2001
      SYNC_LIMIT: 2
      # JMX_PORT: 9999
      # JMX_HOST: localhost
    #   HEAP_OPTS: -javaagent:/kafka/prometheus/jmx_prometheus_javaagent-0.17.0.jar=7071:/kafka/prometheus/zookeeper.yml
    #   CONFLUENT_METRICS_ENABLE: 'true'
    # volumes:
    #   - ./jmx:/kafka/prometheus


  kafka:
    image: quay.io/debezium/kafka:1.9
    hostname: kafka
    container_name: kafka
    restart: always
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - 9092:9092
      - 7072:7072
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      ZOOKEEPER_CONNECT: zookeeper:2181
      LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      TRANSACTION_STATE_LOG_MIN_ISR: 1
      TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_COMPRESSION_TYPE: 'zstd'
      KAFKA_DELETE_RETENTION_MS: 1800000
      KAFKA_OPTS: '-javaagent:/kafka/prometheus/jmx_prometheus_javaagent-0.17.0.jar=7072:/kafka/prometheus/kafka-2_0_0.yml'
      CONFLUENT_METRICS_ENABLE: 'true'
    volumes:
      - ./jmx:/kafka/prometheus


  connect:
    image: quay.io/debezium/connect:1.9
    container_name: connect
    restart: always
    hostname: connect
    ports:
      - 8083:8083
      - 7073:7073
    depends_on:
      - zookeeper
      - kafka
    environment:
      GROUP_ID: 1 
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets 
      STATUS_STORAGE_TOPIC: my_connect_statuses
      CONNECT__ZOOKEEPER_CONNECT: 'zookeeper:2181'
      BOOTSTRAP_SERVERS: 'kafka:9092'
      KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter" 
      VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter" 
      INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter" 
      INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter" 
      REST_ADVERTISED_HOST_NAME: "localhost" 
      # KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1      
      # HEAP_OPTS: '-javaagent:/kafka/prometheus/jmx_prometheus_javaagent-0.17.0.jar=7073:/kafka/prometheus/kafka-connect.yml'
      HEAP_OPTS: '-javaagent:/kafka/prometheus/jmx_prometheus_javaagent-0.17.0.jar=7073:/kafka/prometheus/debezium-connect.yml'
      CONFLUENT_METRICS_ENABLE: 'true'
    volumes:
      - ./jmx:/kafka/prometheus
  
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8180:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
networks:
  default:
    driver: bridge